<UserControl x:Class="Setting.View.Theme"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Setting.View"
             mc:Ignorable="d" 
             Height="54" Width="1080" DataContext="{Binding Path=ThemeList,Source={StaticResource Locator}}">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#02FFFFFF"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="0.7"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" Value="1"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.3"></Setter>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <ListView   ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderThickness="0"   Height="54" Width="1080" ItemsSource="{Binding ThemeItemShowList}" Background="#02FFFFFF" VerticalAlignment="Top"   >
        <ListView.ItemsPanel>
            <ItemsPanelTemplate>
                <WrapPanel ></WrapPanel>
            </ItemsPanelTemplate>
        </ListView.ItemsPanel>
        <ListBox.ItemContainerStyle>
            <Style  TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <ContentPresenter
                                                  Content="{TemplateBinding Content}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListBox.ItemContainerStyle>
        <ListView.ItemTemplate>
            <DataTemplate>
                <StackPanel  Orientation="Horizontal" Width="111"  Height="54" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="40,0,0,0"  >
           
                    <Button Style="{DynamicResource ButtonStyle1}" Width="111"  Height="54"  Command="{Binding ChangeThemeCommand}" CommandParameter="{Binding}"
                            Content="{Binding JsonFileInfo.Name }" Visibility="{Binding Read}">
                        <Button.Background>
                            <ImageBrush ImageSource="/Setting;component/img/UI/背景-主题.png"/>
                        </Button.Background>
                    </Button>
                    <Grid  Width="111" Height="54"  Visibility="{Binding ReName}" Background="White">
                        <TextBox   Text="{Binding JsonFileInfo.Name}"  BorderThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        </TextBox>
                    </Grid>
                
                    <Popup x:Name="popup" Placement="Right" IsOpen="{Binding PopupOpen,Mode=TwoWay}" Width="100" Height="100"  Cursor="{Binding Cursor}" >

                        <StackPanel Orientation="Vertical"  Width="100" Height="100" >
                            <StackPanel.Background>
                                <ImageBrush ImageSource="/Setting;component/img/UI/主题修改弹窗.png"/>
                            </StackPanel.Background>
                            <Button Width="40"  Height="33" Command="{Binding CopyCommand}" CommandParameter="{Binding}"  IsEnabled="{Binding Copy}"  Style="{DynamicResource ButtonStyle1}">拷贝</Button>
                            <Button Width="40" Height="33" Command="{Binding ReMoveCommand}"  CommandParameter="{Binding}" IsEnabled="{Binding Delete}"  Style="{DynamicResource ButtonStyle1}">删除</Button>
                            <Button Width="40" Height="33"  Command="{Binding BeginRenameCommand}" Visibility="{Binding  Read}" IsEnabled="{Binding CanRename}" CommandParameter="{Binding}"  Style="{DynamicResource ButtonStyle1}">重命名</Button>
                            <Button Width="40" Height="33" Command="{Binding EndRenameCommand}" Visibility="{Binding ReName}"  IsEnabled="{Binding CanRename}" CommandParameter="{Binding}" Style="{DynamicResource ButtonStyle1}" >保存</Button>
                        </StackPanel>
                    </Popup>
                    
                </StackPanel>
          



            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>

</UserControl>
